# Docker Compose Production

version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: jdiericks/srv-rptr:v1.0.0
    expose:
      - 80
    environment:
      - DATABASE_URL=postgresql://sv_rptr_prod:sv_rptr_prod@db:5432/sv_rptr_prod
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi.rule=Host(`srv-rpt.thewb.co`)"
      - "traefik.http.routers.fastapi.tls=true"
      - "traefik.http.routers.fastapi.tls.certresolver=letsencrypt"
  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    expose:
      - 5432
    environment:
      - POSTGRES_USER=sv_rptr_prod
      - POSTGRES_PASSWORD=sv_rptr_prod
      - POSTGRES_DB=sv_rptr_prod
  traefik:
    build:
      context: .
      dockerfile: Dockerfile.traefik
    ports:
      - 80:80
      - 443:443
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik-public-certificates:/certificates"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard-srv-rpt.thewb.co`)"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=testuser:$$apr1$$jIKW.bdS$$eKXe4Lxjgy/rH65wP1iQe1"
volumes:
  postgres_data_prod:
  traefik-public-certificates: